name: Publish Docker image (GHCR)

on:
  workflow_run:
    workflows: ["Taskvault CI Build & Test"]   # exakter Name deines CI-Workflows
    types: [completed]
  workflow_dispatch:
    inputs:
      tag:
        description: "Optionaler Release-Tag (z.B. v1.0.0)"
        required: false
        type: string
        default: ""

permissions:
  contents: read
  packages: write

jobs:
  docker-publish:
    # bei workflow_run nur auf success, bei workflow_dispatch immer (du entscheidest ja manuell)
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: java-project/taskvault

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          # falls workflow_run: am Commit der CI laufen
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (latest + run number)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/taskvault-api:latest
            ghcr.io/${{ github.repository_owner }}/taskvault-api:${{ github.run_number }}

      - name: (Optional) Add release tag without rebuild
        if: ${{ github.event.inputs.tag != '' }}
        run: |
          OWNER="${{ github.repository_owner }}"
          TAG="${{ github.event.inputs.tag }}"
          DIGEST="${{ steps.build.outputs.digest }}"
          echo "Tagging digest ${DIGEST} as ghcr.io/${OWNER}/taskvault-api:${TAG}"
          docker buildx imagetools create \
            -t ghcr.io/${OWNER}/taskvault-api:${TAG} \
            "${DIGEST}"